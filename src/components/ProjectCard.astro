---
import TechTag from "./TechTag.astro";
import StatusBadge from "./StatusBadge.astro";
import type { CollectionEntry } from "astro:content";

export interface Props {
  project: CollectionEntry<"project">;
  featured?: boolean;
}

const { project, featured = false } = Astro.props;
const { data, slug } = project;
const { title, oneLiner, media, category, status, tech, badge } = data;

// Format category for display
const categoryDisplay = category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase());
---

<a
  href={`/projects/${slug}`}
  class={`group block border border-border rounded-lg hover:border-muted-foreground/50 transition-all duration-300 hover:shadow-md bg-background overflow-hidden ${
    featured ? 'lg:col-span-1' : ''
  }`}
>
  <!-- Cover Image -->
  <div class="relative overflow-hidden">
    <img
      src={media.coverImage.url}
      alt={media.coverImage.alt}
      class={`w-full object-cover transition-transform duration-300 group-hover:scale-105 ${
        featured ? 'h-56' : 'h-48'
      }`}
    />
    {data.featured && (
      <div class="absolute top-3 right-3">
        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 border border-yellow-200">
          â˜… Featured
        </span>
      </div>
    )}
    {badge && (
      <div class="absolute top-3 left-3">
        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-background/90 text-foreground border border-border backdrop-blur-sm">
          {badge}
        </span>
      </div>
    )}
  </div>

  <!-- Content -->
  <div class={`p-6 ${featured ? 'p-8' : ''}`}>
    <!-- Meta row -->
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center gap-3">
        <span class="text-xs font-medium bg-muted text-muted-foreground px-3 py-1 rounded-full">
          {categoryDisplay}
        </span>
        <StatusBadge status={status} />
      </div>
    </div>

    <!-- Title and description -->
    <div class="space-y-3">
      <h3 class={`font-medium group-hover:text-muted-foreground transition-colors duration-300 ${
        featured ? 'text-xl sm:text-2xl' : 'text-lg sm:text-xl'
      }`}>
        {title}
      </h3>

      <p class={`text-muted-foreground leading-relaxed ${
        featured ? 'text-base' : 'text-sm'
      }`}>
        {oneLiner}
      </p>
    </div>

    <!-- Tech tags -->
    <div class="flex flex-wrap gap-2 mt-6">
      {tech.slice(0, featured ? 4 : 3).map((t) => (
        <TechTag tech={t} />
      ))}
      {tech.length > (featured ? 4 : 3) && (
        <span class="text-xs text-muted-foreground px-2 py-1 bg-muted/50 rounded-md">
          +{tech.length - (featured ? 4 : 3)} more
        </span>
      )}
    </div>

    <!-- CTA hint -->
    <div class="flex items-center gap-2 mt-6 text-sm text-muted-foreground group-hover:text-foreground transition-colors">
      <span>View Project</span>
      <svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </div>
  </div>
</a>
